name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build binaries for multiple OS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        # Alternatively:
        # uses: actions-rs/toolchain@v1
        # with:
        #   toolchain: stable
        #   override: true

      - name: Build your CLI
        run: cargo build --release

      - name: Prepare binary name
        id: rename
        run: |
          # We'll give each binary a unique name based on OS.
          # For Windows, add .exe. For others, no extension.
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "name=my_cli.exe" >> $GITHUB_OUTPUT
          else
            echo "name=my_cli" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-binary
          path: target/release/${{ steps.rename.outputs.name }}

  release:
    name: Create Release and Attach Artifacts
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux, macOS, and Windows build artifacts
        uses: actions/download-artifact@v3
        with:
          # By default, this downloads all artifacts from previous jobs
          path: release_artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: "Release ${{ github.ref }}"
          draft: false
          prerelease: false
          # If you want to update an existing release rather than fail if it exists:
          #   reuse_release: true

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts/ubuntu-latest-binary/my_cli
          asset_name: my_cli-linux
          asset_content_type: application/octet-stream

      - name: Upload macOS Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts/macos-latest-binary/my_cli
          asset_name: my_cli-macos
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts/windows-latest-binary/my_cli.exe
          asset_name: my_cli-windows.exe
          asset_content_type: application/octet-stream
