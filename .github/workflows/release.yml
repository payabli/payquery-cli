name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build binaries for multiple OS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build your CLI
        run: cargo build --release

      - name: Rename binary for Windows
        if: matrix.os == 'windows-latest'
        run: mv target/release/payquery.exe target/release/payquery

      - name: Prepare binary name
        id: rename
        run: echo "name=payquery" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-binary
          path: target/release/payquery

  release:
    name: Create Release and Attach Artifacts
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux, macOS, and Windows build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts/ubuntu-latest-binary/payquery
          asset_name: payquery-linux
          asset_content_type: application/octet-stream

      - name: Upload macOS Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts/m
