name: Release Build

on:
  push:
    branches:
      - main  # Change this to your default branch (e.g., master, main, etc.)

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: my_cli-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: my_cli-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: my_cli-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: my_cli-macos-aarch64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add target for cross-compilation
        run: rustup target add ${{ matrix.target }}

      - name: Build the project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package the binary
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/my_cli${{ matrix.os == 'windows-latest' && '.exe' || '' }} release/${{ matrix.artifact_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: release/${{ matrix.artifact_name }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: release

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          asset_content_type: application/octet-stream
